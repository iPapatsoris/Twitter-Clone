/* Defined globally because they are also used in Tweet. We don't limit their
scope to the Avatar component, as they are also used here to define the 
Profile grid */
:root {
  --avatar-full-height: 133px; // For profile
  --avatar-medium-height: 75px; // For hover preview
  --avatar-small-height: 46px; // For tweets and user lists
  --avatar-tiny-height: 32px; // For user menu header on mobile
}

@include media.multi(mobile, tablet) {
  :root {
    --avatar-small-height: 40px;
  }
}

@include media.multi(mobile) {
  :root {
    --avatar-full-height: 25vw;
  }
}

.Profile {
  --cover-height: 200px;

  // Columns for normal profile and medium preview
  @function defineGridColumns($avatar-width) {
    @return var(--main-content-padding) $avatar-width minmax(180px, 1fr)
      var(--main-content-padding);
  }
  // Columns for small preview
  @function defineGridColumnsSmall() {
    @return var(--avatar-small-height) 1rem minmax(40px, 1fr) 1rem auto;
  }

  display: grid;
  grid-template-areas:
    "cover1  cover1  cover1  cover1 "
    "cover2  avatar  cover3  cover3 "
    ".       avatar  actions .      "
    ".       .  actions .      "
    ".       title   title   .      "
    ".       content content .      ";

  grid-template-rows:
    calc(var(--cover-height) - var(--avatar-full-height) / 2)
    calc(var(--avatar-full-height) / 2)
    calc(var(--avatar-full-height) / 2)
    1rem
    auto
    auto;

  grid-template-columns: defineGridColumns(var(--avatar-full-height));

  &.Preview {
    &.Hover {
      padding-block: 1rem;
      row-gap: 0.5rem;
      grid-template-areas:
        ". avatar actions  ."
        ". title  title    ."
        ". content content .";
      max-width: 300px;
      grid-template-rows: var(--avatar-medium-height) auto auto;
      grid-template-columns: defineGridColumns(var(--avatar-medium-height));
    }

    &.MobileSidebar {
      padding: 1rem;
      row-gap: 0.5rem;
      grid-template-areas:
        "avatar actions"
        "title  title"
        "content content";
      grid-template-rows: var(--avatar-small-height) auto auto;
      grid-template-columns: var(--avatar-small-height) 1fr;

      .NameAndVerified h1 {
        font-size: 17px;
      }
    }

    &.Small {
      cursor: pointer;
      grid-template-areas:
        "avatar . title . actions"
        ". . content content content";
      grid-template-rows: var(--avatar-small-height) auto;
      grid-template-columns: defineGridColumnsSmall();

      &.JustAvatar {
        grid-template-areas: "avatar";
        grid-template-columns: var(--avatar-small-height);
      }
    }
  }

  a:hover {
    text-decoration: underline;
  }
}

.Cover {
  background-size: cover;
  background-position: center;
  width: 100%;
  height: 100%;
  grid-row: cover1 / cover2;
  grid-column: cover1 / -1;
  display: flex;
  align-items: center;
  justify-content: center;

  &:not(.Edit .Cover) {
    cursor: pointer;
  }
}

.EditAvatar {
  cursor: pointer;
}

.Actions {
  grid-area: actions;
  display: flex;
  justify-content: end;
  gap: 0.5rem;
  align-items: center;

  .FixedWidthButton {
    width: 6.5rem;
  }
}

:not(.Preview) > .Actions {
  @include media.mobile {
    padding-top: 1rem;
  }
}

/* Within a List of Profiles, if the user decides to follow some people, the
   Follow / Following buttons of the profiles will not stay aligned with each
   other, because they are of different width depending on their text.

   Possible apporaches:
    - Give a fixed width to the buttons. Drawback is that the "Follow" button 
      could look a little longer than optimal (current solution).
    - Use a global grid for the whole List including the Profiles, instead of 
      individual grids for each Profile. Drawback is that we are not reusing 
      our List and Profile components.
    - Keep the Button grid item centered in its column. Drawback is that we 
      introduce more horizontal space from the right edge of the List.  
*/

// .Preview .Actions {
//   justify-content: center;
// }

:not(.Preview) > .Title {
  padding-block: 1rem;
}

.Preview:not(.NoHoverUnderline) .Title .NameAndVerified h1:hover {
  text-decoration: underline;
}

.Preview.Hover .Title .NameAndVerified h1 {
  font-size: 18px;
}

.Preview.Small .Title .NameAndVerified {
  h1 {
    font-weight: var(--bold-text);
    font-size: var(--big-text);
  }
}

.Title {
  grid-area: title;
  display: flex;
  flex-direction: column;
  justify-content: space-evenly;

  .NameAndVerified {
    h1 {
      font-weight: 800;
    }

    .Verified {
      display: inline-block;
      margin-left: 3px;
      vertical-align: top;
    }
  }
}

.ProfileInfo {
  grid-area: content;
  display: flex;
  flex-direction: column;
  gap: 1rem;

  .Friendship {
    display: flex;
    gap: 1rem;
  }
}

.Loading {
  justify-content: center;
  align-items: center;
  height: 100%;
}

.TweetMenu {
  margin-top: 1rem;
}
