-- MySQL Script generated by MySQL Workbench
-- Παρ 27 Ιαν 2023 12:19:09 μμ CET
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema twitter
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema twitter
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `twitter` DEFAULT CHARACTER SET utf8 ;
USE `twitter` ;

-- -----------------------------------------------------
-- Table `twitter`.`user`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `twitter`.`user` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `username` VARCHAR(15) NOT NULL,
  `name` VARCHAR(50) NOT NULL,
  `avatar` VARCHAR(100) NULL,
  `coverPic` VARCHAR(100) NULL,
  `isVerified` TINYINT(1) NOT NULL DEFAULT 0,
  `bio` VARCHAR(160) NULL,
  `location` VARCHAR(30) NULL,
  `website` VARCHAR(100) NULL,
  `birthDate` DATE NULL,
  `joinedDate` DATE NOT NULL,
  `email` VARCHAR(45) NULL,
  `password` VARCHAR(256) NOT NULL,
  `phone` VARCHAR(45) NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `username_UNIQUE` (`username` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `twitter`.`tweet`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `twitter`.`tweet` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `authorID` INT NOT NULL,
  `text` VARCHAR(280) NOT NULL,
  `isReply` TINYINT(1) NOT NULL,
  `isRetweet` TINYINT(1) NOT NULL,
  `referencedTweetID` INT NULL,
  `views` INT NOT NULL,
  `creationDate` DATETIME NOT NULL,
  `replyDepth` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_Tweet_Autor_idx` (`authorID` ASC),
  INDEX `fk_Tweet_Reference_idx` (`referencedTweetID` ASC),
  CONSTRAINT `fk_Tweet_Autor`
    FOREIGN KEY (`authorID`)
    REFERENCES `twitter`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Tweet_Reference`
    FOREIGN KEY (`referencedTweetID`)
    REFERENCES `twitter`.`tweet` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `twitter`.`user_follows`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `twitter`.`user_follows` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `followerID` INT NOT NULL,
  `followeeID` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_User_has_User_User2_idx` (`followeeID` ASC),
  INDEX `fk_User_has_User_User1_idx` (`followerID` ASC),
  UNIQUE INDEX `unique` (`followerID` ASC, `followeeID` ASC),
  CONSTRAINT `fk_User_has_User_User1`
    FOREIGN KEY (`followerID`)
    REFERENCES `twitter`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_User_has_User_User2`
    FOREIGN KEY (`followeeID`)
    REFERENCES `twitter`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `twitter`.`user_likes_tweet`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `twitter`.`user_likes_tweet` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `userID` INT NOT NULL,
  `tweetID` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_User_has_Tweet_Tweet1_idx` (`tweetID` ASC),
  INDEX `fk_User_has_Tweet_User1_idx` (`userID` ASC),
  UNIQUE INDEX `unique` (`userID` ASC, `tweetID` ASC),
  CONSTRAINT `fk_User_has_Tweet_User1`
    FOREIGN KEY (`userID`)
    REFERENCES `twitter`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_User_has_Tweet_Tweet1`
    FOREIGN KEY (`tweetID`)
    REFERENCES `twitter`.`tweet` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
